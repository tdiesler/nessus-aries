#! /bin/bash

set -e

help() {
  echo "Usage: $0 --[create|list|remove|switch] myname [--wallet-key mykey] [--leder-role ENDORSER]"
}

# Host and Port for the VON-Network
if [[ -z ${LEDGER_ADMIN_HOST} ]]; then
  LEDGER_ADMIN_HOST="localhost"
fi
if [[ -z ${LEDGER_ADMIN_PORT} ]]; then
  LEDGER_ADMIN_PORT="9000"
fi

# Host and Port for ACA-Py
if [[ -z ${ACAPY_HOST} ]]; then
  ACAPY_HOST="localhost"
fi
if [[ -z ${ACAPY_ADMIN_PORT} ]]; then
  ACAPY_ADMIN_PORT="8031"
fi
if [[ -z ${ACAPY_ADMIN_KEY} ]]; then
  ACAPY_ADMIN_KEY="adminkey"
fi

configDir="${HOME}/.config/aries-cli/wallet"
mkdir -p ${configDir}

createWallet() {
  walletName="$1"
  walletKey="$2"
  ledgerRole="$3"

  if [[ -z ${walletName} ]]; then
    help; exit 1
  fi
  if [[ -z ${walletKey} ]]; then
    walletKey="${walletName}Key"
  fi

  echo "Create Wallet for ${walletName} ..."
  jsonData="{\"wallet_name\":\"${walletName}\",\"wallet_key\":\"${walletKey}\",\"wallet_dispatch_type\":\"default\",\"wallet_type\":\"indy\"}"
  echo ${jsonData} | jq .

  jsonResponse=$(curl --silent --request POST "http://${ACAPY_HOST}:${ACAPY_ADMIN_PORT}/multitenancy/wallet" \
  	--header "x-api-key: ${ACAPY_ADMIN_KEY}" \
  	--data-raw "${jsonData}")
  echo ${jsonResponse} | jq .

  walletId=$(echo ${jsonResponse} | jq -r .wallet_id)
  accessToken=$(echo ${jsonResponse} | jq -r .token)

  echo "Create DID ..."
  jsonResponse=$(curl --silent --request POST "http://${ACAPY_HOST}:${ACAPY_ADMIN_PORT}/wallet/did/create" \
  	--header "Authorization: Bearer ${accessToken}" \
  	--header "x-api-key: ${ACAPY_ADMIN_KEY}" \
  	--data-raw "{}")
  echo ${jsonResponse} | jq .

  publicDid=$(echo ${jsonResponse} | jq -r .result.did)
  publicVkey=$(echo ${jsonResponse} | jq -r .result.verkey)

  if [[ ! -z ${ledgerRole} ]]; then

    echo "Register DID with the Ledger ..."
    jsonData="{\"alias\":\"${walletName}\",\"did\":\"${publicDid}\",\"verkey\":\"${publicVkey}\",\"role\":\"${ledgerRole}\"}"
    echo ${jsonData} | jq .

    jsonResponse=$(curl --silent --request POST "http://${LEDGER_ADMIN_HOST}:${LEDGER_ADMIN_PORT}/register" \
    	--data-raw "${jsonData}")
    echo ${jsonResponse} | jq .

    echo "Set the public DID for the wallet"
    jsonResponse=$(curl --silent --request POST "http://${ACAPY_HOST}:${ACAPY_ADMIN_PORT}/wallet/did/public?did=${publicDid}" \
    	--header "Authorization: Bearer ${accessToken}" \
    	--header "x-api-key: ${ACAPY_ADMIN_KEY}")
    echo ${jsonResponse} | jq .
  fi

  configFile="${configDir}/${walletName}.json"

  echo "Wallet Config: ${configFile}"
  jsonData="{\"wallet_name\":\"${walletName}\",\"wallet_key\":\"${walletKey}\",\"ledger_role\":\"${ledgerRole}\""
  jsonData="${jsonData},\"wallet_id\":\"${walletId}\",\"did\":\"${publicDid}\",\"verkey\":\"${publicVkey}\",\"token\":\"${accessToken}\"}"
  echo "${jsonData}" > ${configFile}
  cat ${configFile} | jq .

  echo "Create CLI environment for ${walletName} ..."
  aries-cli configuration add --environment="${walletName}" --agent-url="http://${ACAPY_HOST}:${ACAPY_ADMIN_PORT}" --api-key="${ACAPY_ADMIN_KEY}" --token="${accessToken}"
}

listWallets() {

  jsonResponse=$(curl --silent --request GET "http://${ACAPY_HOST}:${ACAPY_ADMIN_PORT}/multitenancy/wallets" \
    --header "x-api-key: ${ACAPY_ADMIN_KEY}")
  echo ${jsonResponse} | jq .
}

removeWallet() {
  walletName="$1"

  if [[ -z ${walletName} ]]; then
    help; exit 1
  fi

  configFile="${configDir}/${walletName}.json"

  if [[ -f ${configFile} ]]; then
    walletId=$(cat ${configFile} | jq -r .wallet_id)
    walletKey=$(cat ${configFile} | jq -r .wallet_key)

    echo "Remove wallet for ${walletName}"
    jsonData="{\"wallet_key\":\"${walletKey}\"}"
    echo ${jsonData} | jq .

    jsonResponse=$(curl --silent --request POST "http://${ACAPY_HOST}:${ACAPY_ADMIN_PORT}/multitenancy/wallet/${walletId}/remove" \
      --header "x-api-key: ${ACAPY_ADMIN_KEY}")

    rm ${configFile}

    # [#165] Add support for dropping environments from the config
    # https://github.com/animo/aries-cli/issues/165
  fi
}

switchWallet() {
  walletName="$1"

  if [[ -z ${walletName} ]]; then
    help; exit 1
  fi

  configFile="${configDir}/${walletName}.json"
  accessToken=$(cat ${configFile} | jq -r .token)

  echo "Switching CLI environment to ${walletName}"
  aries-cli configuration add --environment="default" --agent-url="http://${ACAPY_HOST}:${ACAPY_ADMIN_PORT}" --api-key="${ACAPY_ADMIN_KEY}" --token="${accessToken}"
}

options=($@)
for i in "${!options[@]}"
do
  j=$((i + 1))
  key=${options[i]}
  val=${options[j]}

  # echo "$i/$j: ${key} ${val}"

  case ${key} in
    --create | --switch | --remove) walletName=${val};;
    --wallet-key) walletKey=${val};;
    --ledger-role) ledgerRole=${val};;
  esac
done

if [[ $1 == "--create" ]]; then

  createWallet "${walletName}" "${walletKey}" "${ledgerRole}"

elif [[ $1 == "--create-all" ]]; then

  for walletName in 'Government' 'Faber' 'Acme' 'Thrift'; do
      createWallet ${walletName} "" "ENDORSER"
  done
  createWallet 'Alice'

elif [[ $1 == "--list" ]]; then

  listWallets

elif [[ $1 == "--remove" ]]; then

  removeWallet ${walletName}

elif [[ $1 == "--remove-all" ]]; then

  for walletName in 'Government' 'Faber' 'Acme' 'Thrift' 'Alice'; do
    removeWallet ${walletName}
  done

elif [[ $1 == "--switch" ]]; then

  switchWallet ${walletName}

else
  help
fi
