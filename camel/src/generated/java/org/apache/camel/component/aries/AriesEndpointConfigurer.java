/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.component.aries;

import java.util.Map;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.ExtendedPropertyConfigurerGetter;
import org.apache.camel.spi.PropertyConfigurerGetter;
import org.apache.camel.spi.ConfigurerStrategy;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.util.CaseInsensitiveMap;
import org.apache.camel.support.component.PropertyConfigurerSupport;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class AriesEndpointConfigurer extends PropertyConfigurerSupport implements GeneratedPropertyConfigurer, PropertyConfigurerGetter {

    @Override
    public boolean configure(CamelContext camelContext, Object obj, String name, Object value, boolean ignoreCase) {
        HyperledgerAriesEndpoint target = (HyperledgerAriesEndpoint) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "lazystartproducer":
        case "lazyStartProducer": target.setLazyStartProducer(property(camelContext, boolean.class, value)); return true;
        case "method": target.getConfiguration().setMethod(property(camelContext, org.apache.camel.component.aries.HyperledgerAriesConfiguration.MethodId.class, value)); return true;
        case "service": target.getConfiguration().setService(property(camelContext, org.apache.camel.component.aries.HyperledgerAriesConfiguration.ServiceId.class, value)); return true;
        case "walletcreate":
        case "walletCreate": target.getConfiguration().setWalletCreate(property(camelContext, boolean.class, value)); return true;
        case "walletremove":
        case "walletRemove": target.getConfiguration().setWalletRemove(property(camelContext, boolean.class, value)); return true;
        case "walletrole":
        case "walletRole": target.getConfiguration().setWalletRole(property(camelContext, org.hyperledger.aries.api.ledger.IndyLedgerRoles.class, value)); return true;
        default: return false;
        }
    }

    @Override
    public Class<?> getOptionType(String name, boolean ignoreCase) {
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "lazystartproducer":
        case "lazyStartProducer": return boolean.class;
        case "method": return org.apache.camel.component.aries.HyperledgerAriesConfiguration.MethodId.class;
        case "service": return org.apache.camel.component.aries.HyperledgerAriesConfiguration.ServiceId.class;
        case "walletcreate":
        case "walletCreate": return boolean.class;
        case "walletremove":
        case "walletRemove": return boolean.class;
        case "walletrole":
        case "walletRole": return org.hyperledger.aries.api.ledger.IndyLedgerRoles.class;
        default: return null;
        }
    }

    @Override
    public Object getOptionValue(Object obj, String name, boolean ignoreCase) {
        HyperledgerAriesEndpoint target = (HyperledgerAriesEndpoint) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "lazystartproducer":
        case "lazyStartProducer": return target.isLazyStartProducer();
        case "method": return target.getConfiguration().getMethod();
        case "service": return target.getConfiguration().getService();
        case "walletcreate":
        case "walletCreate": return target.getConfiguration().isWalletCreate();
        case "walletremove":
        case "walletRemove": return target.getConfiguration().isWalletRemove();
        case "walletrole":
        case "walletRole": return target.getConfiguration().getWalletRole();
        default: return null;
        }
    }
}

